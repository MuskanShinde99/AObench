System Setup Procedure  
======================================

1. Start DAO  
------------  
- Open a new terminal
- cd ~/dao/daoRistretto/
- tmux kill-server
- ./ristrettoStartBin
  (There are errors at startup; ignore them)
  **To be handled by PAPYRUS team when at OHP**

2. Open Shared Memories Viewer  
------------------------------  
- Open a new terminal  
- cd ~/dao/daoRistretto/  # change the address here  
- Run:  
    daoShmViewer.py &  
  (Opens shared memories viewer)  

3. Run Papyrus SIM / Papyrus GUI  
--------------------------------  
- Open new terminal  
- cd ~/dao/daoPapyrus/  
- Start SIM: daoPapyrusSimStart -b 1  
- GUI: papyCtrl.py  
- DM display: daoDmDisp.py -s dmCmd -m dm241Map  
  **To be handled by PAPYRUS team when at OHP**

4. Open Spyder  or VS code
--------------------------  
Spyder:
- Set the working directory to *Banc AO* 
- Go to: Tools/PYTHONPATH manager 
- Add full path to Banc AO

VS Code:
_ In terminal in VS Code
- Setting the PYTHONPATH to AO bench: 
      export PYTHONPATH=“/home/daouser/RISTRETTO/AObench:$PYTHONPATH”
- Setting the PYTHONPATH to dao:
      export PYTHONPATH=“path/to/dao:$PYTHONPATH”

5. Change the location in Config file
-------------------------------------
- Open src/config.py in Spyder
- Change locations of: opt_lab_root & project_root 

6. Create Shared Memories  
-------------------------  
- Open src/create_shared_memories.py in Spyder  
- Check that configuration is set to config["ohp"]
- Check the src/setup_params.toml have right parameters for tests at OHP
- Open src/shm_path.toml in Spyder: Put the correct shared memories for cam1 and cam2
- Set the path in Spyder console to: cd /home/ristretto-dao/optlab-master/PROJECTS_3/RISTRETTO/Banc\ AO/src
- Run the file  

7. Check dao setup file  
----------------------- 
- Open src/dao_setup.py in Spyder  
- Check that place of test is set to OHP: PLACE_OF_TEST = os.environ.get("PLACE_OF_TEST", "OHP")
- Open src/dao_setup_PAPYRUS.py in Spyder  
- Check all the parameters for Papyrus

8. Capture bias image
---------------------
- Open scripts_with_dao/calibration_bias.py in Spyder 
- Run the file 
  - Turn off the laser  
  - Take a bias frame  
    **(bias frame is set to zero for tests with Papyrus simulator – remove that part)**  
  - Turn on the laser  
- Check in calibration folder if the file was saved

9. Cropping cred3 frames and bias subsraction
----------------------------------------------
- Open scripts_with_dao/cred3_crop.py in Spyder 
- Run the file and check if cred_bias_subtracted & cred_cropped shared memories are created

10. Run Calibrations  
--------------------  
- Open scripts_with_dao/dao_calibrations_file_with_CLI.py 
- Open a new terminal
- cd /home/ristretto-dao/optlab-master/PROJECTS_3/RISTRETTO/Banc\ AO/scripts_with_dao
- export PYTHONPATH=“/home/ristretto-dao/optlab-master/PROJECTS_3/RISTRETTO/Banc\ AO:$PYTHONPATH”
- python dao_calibrations_file.py

- Run the following steps:  
  - Import libraries & shared memories  
  - Set DM to flat  
  - Load transformation matrix from KL2Act_papy_shm  
  - Create a flux filtering mask – OnSky = False  
  - Create shared memories based on the number of valid pixels  
  - Capture reference image and PSF  
  - Perform push-pull calibration  

11. Linearity Curve and Cross-Correlation Matrix Computation  
------------------------------------------------------------  
- Open scripts_with_dao/dao_linearity_curve_3s_pyr_papyrus.py in spyder
- Run the following steps:  
- Import libraries & shared memories  
    **(OnSky = False)**  
  - Set DM to flat  
  - Load transformation matrix from KL2Act_papy_shm  
  - Load Calibration mask
  - Load reference image
  - Define the number of KL modes used  
  - Compute linearity curves  
  - Compute cross-correlation matrix  
  
12. Run Modes and DM Commands computation - Day
----------------------------------------------- 
- Open a new terminl
  - cd /home/ristretto-dao/optlab-master/PROJECTS_3/RISTRETTO/ARPOGE
  - run this command in terminal to set path: LD_LIBRARY_PATH=../lib:$LD_LIBRARY_PATH
- add required files in ARPOGE/data/:
  bias_image.fits
  mask.fits
  reference_image_normalized.fits
  RM_S2KL.fits (dimensions: n_kl × n_slopes)
- Open a new trminal 
  - cd ARPOGE/
  - ru commands in this terminal:
    waf configure
    waf
    waf install
- cd ARPOGE/apps/
  - start the shared memory and GUI:
    ipython setup_shm.py
    ipython gui.py
- Open a new terminal 
  - cd ARPOGE/bin/
  - run ./hrtc
- Open a new terminal 
  - cd ARPOGE/bin/
  - run ./pix2modes_cuda
  
13. Start Control
-----------------
- Open GUI - Run: python gui.py  
- Go to "Calibration" tab:
  - Make sure there is no turbulence running
  - Click on "Start Latency identification" and wait for some time
  - Click on "Save Latency"
  - Click on "Load Latency"
- Go to "Process" tab:
  - Click on "start pol reconstruction"
  - Click on "start freq mag estimation"
- Go to "Control" tab
  - You should see the top plot updating
  - We are now ready to close the loop
  - Set "Gain" 
  - Check the "loop closed" botton
  - You should see the bottom plot updating now
  
14. Creating On Sky Mask  
------------------------
- Run the following steps:  
  - Open a new terminal
  - Open cd /home/ristretto-dao/optlab-master/PROJECTS_3/RISTRETTO/Banc\ AO/scripts_with_dao
  - Run python dao_calibrations_file_with_CLI.py --cells create_mask --on-sky 
  
15. Run Modes and DM Commands computation - Night
------------------------------------------------- 
- Open scripts_with_dao/dao_AO_open_loop_with_kl_3s_pyr_papyrus.py  
- Open a new terminl
  - cd /home/ristretto-dao/optlab-master/PROJECTS_3/RISTRETTO/ARPOGE
  - run this command in terminal to set path: LD_LIBRARY_PATH=../lib:$LD_LIBRARY_PATH
- add required files in ARPOGE/data/:
  bias_image.fits
  mask_OnSky.fits
  reference_image_normalized.fits
  RM_S2KL.fits (dimensions: n_kl × n_slopes) (make sure it is onsky mask used for filtering)
